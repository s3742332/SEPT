# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  backendbuildandtest:
    docker:
      - image: cimg/openjdk:16.0.2
    steps:
      - checkout
      - run:
          name: Login microservice
          command: |
            cd ~/project/BackEnd/loginmicroservices
            chmod u+x ~/project/BackEnd/loginmicroservices/mvnw
            ~/project/BackEnd/loginmicroservices/mvnw package
      - run:
          name: book microservice
          command: |
            cd ~/project/BackEnd/booksmicroservices
            chmod u+x ~/project/BackEnd/booksmicroservices/mvnw
            ~/project/BackEnd/booksmicroservices/mvnw package
      - persist_to_workspace:
          root: ~/project/BackEnd
          paths:
            - loginmicroservices/target/loginmicroservices-0.0.1.jar
            - booksmicroservices/target/booksmicroservices-0.0.1.jar
  frontendbuild:
    docker:
      - image: cimg/node:current
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            cd ~/project/FrontEnd/myfirstapp
            npm install
      - persist_to_workspace:
          root: ~/project/FrontEnd/myfirstapp
          paths:
            - node_modules
  frontendtest:
    docker:
      - image: cimg/node:current-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/FrontEnd/myfirstapp
      - run:
          name: Run front end test
          command: |
            cd ~/project/FrontEnd/myfirstapp
            npm test -- --watchAll=false
  builddockercompose:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/BackEnd
      - attach_workspace:
          at: ~/project/FrontEnd/myfirstapp     
      - run:
          name: Authenticate to Docker
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin   
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Build docker compose
          command: |
            docker-compose build
      - run:
          name: Push docker compose
          command: |
            docker-compose push
  deployAWS:
    docker:
      - image: cimg/base:stable 
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "6e:37:d5:02:80:f9:31:fe:bd:39:04:02:f9:2b:0b:60"
      - run:
          name: deploy
          command: |
            touch deploy.sh 
            echo "docker-compose pull" >> deploy.sh 
            echo "docker-compose up -d" >> deploy.sh 
            ssh -o StrictHostKeyChecking=no ec2-user@$EC2_URL 'bash -s' <./deploy.sh

workflows:
  build:
    jobs:
      - backendbuildandtest
      - frontendbuild
      - frontendtest:
          requires:
            - frontendbuild
      - hold:
          type: approval
          requires:
            - backendbuildandtest
            - frontendtest
          filters:
            branches:
              only: main
      - builddockercompose:
          requires:
            - hold
      - deployAWS:
          requires:
            - builddockercompose
